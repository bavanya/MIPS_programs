.data

message1: .asciiz "Enter the first number: "
message2: .asciiz "\nEnter the second number: "
message3: .asciiz "\nPrinting the second number: "
message4: .asciiz "\nPrinting the first number: "

newline: .asciiz "\n"

.text
.globl main

main:

    # Taking number inputs

	li	$v0,4
	la	$a0, message1
	syscall

    li $v0, 5
    syscall

    move $t0, $v0        

    li	$v0,4
	la	$a0, message2
	syscall

    li $v0, 5
    syscall

    move $t1, $v0  

    move $a0, $t0
    move $a1, $t1    

    jal using_temp_variable

    move $t0, $a0
    move $t1, $a1 

    # Printing the second number

	li	$v0,4
	la	$a0, message3
	syscall

    li $v0, 1
    move $a0, $t0
    syscall

    # Printing the first number

	li	$v0,4
	la	$a0, message4
	syscall

    li $v0, 1
    move $a0, $t1
    syscall

	li	$v0,4
	la	$a0, newline
	syscall

    # Taking number inputs
    
	li	$v0,4
	la	$a0, message1
	syscall

    li $v0, 5
    syscall

    move $t0, $v0        

    li	$v0,4
	la	$a0, message2
	syscall

    li $v0, 5
    syscall

    move $t1, $v0  

    move $a0, $t0
    move $a1, $t1    

    jal using_bitwise_operators

    move $t0, $a0
    move $t1, $a1 

    # Printing the second number

	li	$v0,4
	la	$a0, message3
	syscall


    li $v0, 1
    move $a0, $t0
    syscall

    # Printing the first number

	li	$v0,4
	la	$a0, message4
	syscall

    li $v0, 1
    move $a0, $t1
    syscall    

	li	$v0,4
	la	$a0, newline
	syscall

    # Taking number inputs
    
	li	$v0,4
	la	$a0, message1
	syscall

    li $v0, 5
    syscall

    move $t0, $v0        

    li	$v0,4
	la	$a0, message2
	syscall

    li $v0, 5
    syscall

    move $t1, $v0  

    move $a0, $t0
    move $a1, $t1    

    jal using_multiplication_and_division

    move $t0, $a0
    move $t1, $a1 

    # Printing the second number

	li	$v0,4
	la	$a0, message3
	syscall

    li $v0, 1
    move $a0, $t0
    syscall

    # Printing the first number

	li	$v0,4
	la	$a0, message4
	syscall

    li $v0, 1
    move $a0, $t1
    syscall  

	li	$v0,4
	la	$a0, newline
	syscall

    # Taking number inputs
    
	li	$v0,4
	la	$a0, message1
	syscall

    li $v0, 5
    syscall

    move $t0, $v0        

    li	$v0,4
	la	$a0, message2
	syscall

    li $v0, 5
    syscall

    move $t1, $v0  

    move $a0, $t0
    move $a1, $t1    

    jal using_addition_substraction

    move $t0, $a0
    move $t1, $a1 

    # Printing the second number

	li	$v0,4
	la	$a0, message3
	syscall

    li $v0, 1
    move $a0, $t0
    syscall

    # Printing the first number

	li	$v0,4
	la	$a0, message4
	syscall

    li $v0, 1
    move $a0, $t1
    syscall    

    li $v0, 10
    syscall

using_temp_variable:

    move $t1, $a0
    move $a0, $a1
    move $a1, $t1
    
    jr $ra

using_bitwise_operators:

    xor $a0, $a0, $a1
    xor $a1, $a0, $a1
    xor $a0, $a0, $a1    

    jr $ra

using_multiplication_and_division:

    mul $t1, $a0, $a1
    mul $t2, $a0, $a1

	divu $t1, $a0
	mflo $a0 # quotient moved into $a1

	divu $t2, $a1
	mflo $a1 # quotient moved into $a1

    jr $ra

using_addition_substraction:

    add $t1, $a0, $a1

    sub $a1, $t1, $a1
    sub $a0, $t1, $a0

    jr $ra
