# Compute first twelve Fibonacci numbers and put in array, then print
      .data
fibs: .word   0 : 50        # "array" of 12 words to contain fib values
comma:.asciiz  ","          # comma to insert between numbers
sentence: .asciiz  " number of fibonacci series is stored at memory location "          
head: .asciiz  "fibonacci series: "
message1: .asciiz "Enter the number n: "
newline: .asciiz "\n"
      .text

main:

      la   $t0, fibs 

      li $v0, 4
      la $a0, message1
      syscall

      li $v0, 5
      syscall
      move $t5, $v0    

      li   $t2, 0           
      li   $t3, 1           

      sw   $t2, 0($t0)      
      sw   $t3, 4($t0)      

      addi $t1, $t5, -2     

loop: lw   $t3, 0($t0)    
      lw   $t4, 4($t0)    

      add  $t2, $t3, $t4   
      sw   $t2, 8($t0)     

      addi $t0, $t0, 4     
      addi $t1, $t1, -1   

      bge  $t1, $0, loop      

      la   $a0, fibs       
      add  $a1, $zero, $t5 
      jal  print          

print:
      add  $t0, $zero, $a0 
      add  $t1, $zero, $a1 

      li $t6, 1
      add  $t7, $zero, $a0
      jal print1

      la   $a0, head        
      li   $v0, 4          
      syscall              

print1:

      li $v0, 1
      move $a0, $t6
      syscall

      li $v0, 4
      la $a0, sentence
      syscall

  
      move   $a0, $t7     
      li   $v0, 1           
      syscall      

      addi $t7, $t7, 4      

      li $v0, 4
      la $a0, newline
      syscall
      
      addi $t6, $t6, 1
      ble $t6, $t5, print1



la   $a0, head        
li   $v0, 4          
syscall     

addi $t1, $t1, -1

out:  lw   $a0, 0($t0)      
      li   $v0, 1          
      syscall 

      li $t3, 1
      bge  $t1, $t3, comma_print
                     
      li   $v0, 10         
      syscall   

comma_print:
      la   $a0, comma       
      li   $v0, 4           
      syscall 

      addi $t0, $t0, 4     
      addi $t1, $t1, -1    
      bge  $t1, $0, out             